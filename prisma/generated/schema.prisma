datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output = "generated"
}

model Post {
  id                    String     @id @default(auto()) @map("_id") @db.ObjectId
  title                 String
  body                  String
  user                  User       @relation(fields: [userId], references: [id])
  userId                String     @db.ObjectId
  programmingLanguages  String[]
  domains               String[]
  interests             interest[]
  goodIdeas             goodIdea[]
  badIdeas              badIdea[]
  chatGroup             ChatGroup[] 
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
}

model goodIdea {    
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  post      Post    @relation(fields: [postId], references: [id])
  postId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
    
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model badIdea {    
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  post      Post    @relation(fields: [postId], references: [id])
  postId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
    
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model interest {    
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  post      Post    @relation(fields: [postId], references: [id])
  postId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  invitation Invitation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  email                 String   @unique
  firstName             String
  secondName            String?
  country               String
  educationExperience   String
  domains               String[]
  profilePicture        String?
  programmingLanguages  String[]
  biography             String?
  posts                 Post[]
  goodIdeas             goodIdea[]
  badIdeas              badIdea[]
  interests             interest[]
  messages              ChatMessage[]  
  chatGroups            ChatGroupUser[] 
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  Invitations           Invitation[]
}

model ChatMessage {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  sender      User        @relation(fields: [senderId], references: [id])
  senderId    String      @db.ObjectId
  chatGroup   ChatGroup   @relation(fields: [chatGroupId], references: [id])
  chatGroupId String      @db.ObjectId
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}


model ChatGroup {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  members     ChatGroupUser[]
  messages    ChatMessage[]
  invitations Invitation[]
  post        Post            @relation(fields: [postId], references: [id])
  postId      String          @db.ObjectId
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model ChatGroupUser {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  user        User          @relation(fields: [userId], references: [id])
  userId      String        @db.ObjectId
  chatGroup   ChatGroup     @relation(fields: [chatGroupId], references: [id])
  chatGroupId String        @db.ObjectId
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Invitation {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  sender        User        @relation(fields: [senderId], references: [id])
  senderId      String      @db.ObjectId
  chatGroup     ChatGroup   @relation(fields: [chatGroupId], references: [id])
  chatGroupId   String      @db.ObjectId
  interest      interest    @relation(fields: [interestId], references: [id])
  interestId    String      @db.ObjectId
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}